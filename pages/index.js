import React, { useState, Fragment } from 'react';
import Head from 'next/head';
import {
  UserCircleIcon,
  HeartIcon,
  BellIcon,
  LinkIcon,
  DotsVerticalIcon,
  SearchIcon,
} from '@heroicons/react/outline';
import { Popover, Disclosure } from '@headlessui/react'

import { getData } from '../lib/photos';
import Search from '../components/search';

export async function getServerSideProps() {
  let offset = 1
  const response = await fetch(`http://xoosha.com/ws/1/test.php?offset=${offset}`);

  return {
    props: {
      data: await response.json()
    },
  };
}

export default function Home({ data }) {

  const [search, setSearch] = useState("");
  let regex = new RegExp(search, "g");
  const searchResult = data.filter(item => regex.test(item.description));

  return (
    <div className="">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <header className="sticky top-0 z-10 p-6 bg-white">
        <Disclosure as="div" className="relative">
          <div className="flex justify-between items-center">
            <h1 className="text-2xl font-bold">
              Pinterest
            </h1>
            <div className="flex gap-6 items-center">
              <div className="hidden sm:flex mr-4 ml-4">
                <Search setSearch={setSearch} />
              </div>
              <Disclosure.Button className="sm:hidden -mr-2 ml-2 hover:bg-gray-100 p-2 rounded-full">
                <SearchIcon className="w-6 h-6 stroke-gray-400 hover:stroke-blue-500" />
              </Disclosure.Button>
              <span className="relative inline-block">
                <BellIcon className="w-6 h-6 stroke-gray-400 hover:stroke-blue-500" />
                <span className="absolute top-0 right-0 inline-flex items-center justify-center p-1 text-xs font-bold leading-none text-red-100 transform translate-x-1/2 -translate-y-1/2 bg-red-600 rounded-full">10</span>
              </span>
              <HeartIcon className="w-6 h-6 stroke-gray-400 hover:stroke-blue-500" />
              <UserCircleIcon className="w-6 h-6 stroke-gray-400 hover:stroke-blue-500" />
            </div>
          </div>
          <Disclosure.Panel className="transform w-screen sm:hidden">
            <div className="overflow-hidden">
              <div className="relative grid bg-white p-4">
                <Search setSearch={setSearch} />
              </div>
            </div>
          </Disclosure.Panel>
        </Disclosure>
      </header>

      <main>
        <div className="pr-6 pl-6 pt-10 pb-10">
          <div className="lg:columns-5 sm:columns-3 xs:columns-1 gap-4 w-full mx-auto space-y-3 pb-28">
            {searchResult.map((item) => (
              <div key={item.page_id} className="group">
                {console.log(item)}
                <div className="bg-black border mb-4 relative rounded-lg overflow-hidden xl:aspect-w-7 xl:aspect-h-8 break-inside-avoid">
                  <img
                    src={item.image_url}
                    alt={item.imageAlt}
                    className="w-full h-full object-center object-cover group-hover:opacity-50"
                  />
                  <p className="hidden absolute bottom-3 left-3 mt-1 text-lg font-medium text-white group-hover:block">{item.price}</p>
                  <div className="hidden absolute top-3 left-3 group-hover:block">
                    <a className="mt-3" href={item.parent_url}>
                      <DotsVerticalIcon className="w-6 h-6 stroke-white hover:stroke-gray-200" />
                    </a>
                  </div>
                  <div className="hidden absolute bottom-3 right-3 group-hover:block">
                    <a className="mt-3" href={item.parent_url}>
                      <LinkIcon className="w-6 h-6 stroke-white hover:stroke-gray-200" />
                    </a>
                    <p className="mt-3">
                      <HeartIcon className="w-6 h-6 stroke-white hover:fill-red-500 hover:stroke-red-500 hover:cursor-pointer" />
                    </p>
                  </div>
                </div>
              </div>
            ))}
          </div>
          {/*<div className="grid grid-cols-1 gap-y-10 sm:grid-cols-2 gap-x-6 lg:grid-cols-3 xl:grid-cols-4 xl:gap-x-8">
            {data.map((item) => (
              <a key={item.id} href={item.href} className="group">
                {console.log(item)}
                <div className="w-full aspect-w-1 aspect-h-1 bg-gray-200 rounded-lg overflow-hidden xl:aspect-w-7 xl:aspect-h-8">
                  <img
                    src={item.image_url}
                    alt={item.imageAlt}
                    className="w-full h-full object-center object-cover group-hover:opacity-75"
                  />
                </div>
                <h3 className="mt-4 text-sm text-gray-700">{item.name}</h3>
                <p className="mt-1 text-lg font-medium text-gray-900">{item.price}</p>
              </a>
            ))}
            </div>*/}
        </div>
      </main>

      <footer>

      </footer>
    </div>
  )
}
